
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIGUALQUENIGUALQUEleftMAYQUEMENQUEMAYIGUALQUEMENIGUALQUEleftMASMENOSleftPORDIVIDIDOMODULOBOOL BREAK CADENA CLASS COMA CONTINUE CORCHETEDER CORCHETEIZQ DECIMAL DEF DIVIDIDO DOSP ELIF ELSE ENTERO FALSE FLOAT FOR ID IF IGUAL IGUALQUE IN INT LINEANUEVA LIST LLAVDER LLAVIZQ LOCAL MAS MAYIGUALQUE MAYQUE MENIGUALQUE MENOS MENQUE MODULO NIGUALQUE NONE PARDER PARIZQ POR PRINT PRINTLN PUNTO RANGE RETURN STRING STRUCT TRUE WHILE cadenaStringinit : linstruccioneslinstrucciones : linstrucciones instruccioneslinstrucciones : instruccionesinstrucciones :  asignacion\n                    | imprimir\n                    | imprimirln\n                    | exp\n                \n                     funciones_nativas : imprimirasignacion :  lista_ID IGUAL  exp asignacion :  lista_ID IGUAL  exp DOSP tipo lista_ID : lista_ID COMA IDlista_ID : IDimprimir : PRINT PARIZQ impresiones PARDERimprimirln : PRINTLN PARIZQ impresiones PARDERimpresiones : impresiones COMA prima_impresiones  impresiones : prima_impresiones  prima_impresiones : ID \n                            | exp tipo : INT \n        | BOOL\n        | FLOAT\n        | STRING\n        | NONE\n        |\n        exp : INTexp : FLOATexp : TRUEexp : FALSEexp : cadenaStringexp : PARIZQ exp PARDERexp : ID exp : exp MAS exp\n    | exp MENOS exp\n    | exp DIVIDIDO exp\n    | exp POR exp\n    | exp MODULO exp\n    \n    \n    exp : exp MAYQUE exp  \n    | exp MENIGUALQUE exp\n    | exp MAYIGUALQUE exp\n    | exp MENQUE exp\n    | exp IGUALQUE exp\n    | exp NIGUALQUE exp\n    \n    '
    
_lr_action_items = {'PRINT':([0,2,3,4,5,6,7,12,13,14,15,16,17,18,34,36,37,38,39,40,41,42,43,44,45,46,47,53,55,56,58,59,60,61,62,63,64,],[9,9,-3,-4,-5,-6,-7,-25,-26,-27,-28,-29,-31,-2,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-9,-30,-24,-13,-14,-10,-19,-20,-21,-22,-23,]),'PRINTLN':([0,2,3,4,5,6,7,12,13,14,15,16,17,18,34,36,37,38,39,40,41,42,43,44,45,46,47,53,55,56,58,59,60,61,62,63,64,],[11,11,-3,-4,-5,-6,-7,-25,-26,-27,-28,-29,-31,-2,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-9,-30,-24,-13,-14,-10,-19,-20,-21,-22,-23,]),'INT':([0,2,3,4,5,6,7,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,55,56,57,58,59,60,61,62,63,64,],[12,12,-3,-4,-5,-6,-7,12,-25,-26,-27,-28,-29,-31,-2,12,12,12,12,12,12,12,12,12,12,12,12,12,-31,12,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-9,-30,60,-13,12,-14,-10,-19,-20,-21,-22,-23,]),'FLOAT':([0,2,3,4,5,6,7,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,55,56,57,58,59,60,61,62,63,64,],[13,13,-3,-4,-5,-6,-7,13,-25,-26,-27,-28,-29,-31,-2,13,13,13,13,13,13,13,13,13,13,13,13,13,-31,13,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-9,-30,62,-13,13,-14,-10,-19,-20,-21,-22,-23,]),'TRUE':([0,2,3,4,5,6,7,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,55,56,57,58,59,60,61,62,63,64,],[14,14,-3,-4,-5,-6,-7,14,-25,-26,-27,-28,-29,-31,-2,14,14,14,14,14,14,14,14,14,14,14,14,14,-31,14,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-9,-30,-24,-13,14,-14,-10,-19,-20,-21,-22,-23,]),'FALSE':([0,2,3,4,5,6,7,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,55,56,57,58,59,60,61,62,63,64,],[15,15,-3,-4,-5,-6,-7,15,-25,-26,-27,-28,-29,-31,-2,15,15,15,15,15,15,15,15,15,15,15,15,15,-31,15,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-9,-30,-24,-13,15,-14,-10,-19,-20,-21,-22,-23,]),'cadenaString':([0,2,3,4,5,6,7,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,55,56,57,58,59,60,61,62,63,64,],[16,16,-3,-4,-5,-6,-7,16,-25,-26,-27,-28,-29,-31,-2,16,16,16,16,16,16,16,16,16,16,16,16,16,-31,16,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-9,-30,-24,-13,16,-14,-10,-19,-20,-21,-22,-23,]),'PARIZQ':([0,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,55,56,57,58,59,60,61,62,63,64,],[10,10,-3,-4,-5,-6,-7,32,10,35,-25,-26,-27,-28,-29,-31,-2,10,10,10,10,10,10,10,10,10,10,10,10,10,-31,10,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-9,-30,-24,-13,10,-14,-10,-19,-20,-21,-22,-23,]),'ID':([0,2,3,4,5,6,7,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,55,56,57,58,59,60,61,62,63,64,],[17,17,-3,-4,-5,-6,-7,34,-25,-26,-27,-28,-29,-31,-2,34,34,34,34,34,34,34,34,34,34,34,34,48,51,-31,51,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-9,-30,-24,-13,51,-14,-10,-19,-20,-21,-22,-23,]),'$end':([1,2,3,4,5,6,7,12,13,14,15,16,17,18,34,36,37,38,39,40,41,42,43,44,45,46,47,53,55,56,58,59,60,61,62,63,64,],[0,-1,-3,-4,-5,-6,-7,-25,-26,-27,-28,-29,-31,-2,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-9,-30,-24,-13,-14,-10,-19,-20,-21,-22,-23,]),'MAS':([7,12,13,14,15,16,17,33,34,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,],[19,-25,-26,-27,-28,-29,-31,19,-31,-32,-33,-34,-35,-36,19,19,19,19,19,19,19,-31,19,-30,]),'MENOS':([7,12,13,14,15,16,17,33,34,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,],[20,-25,-26,-27,-28,-29,-31,20,-31,-32,-33,-34,-35,-36,20,20,20,20,20,20,20,-31,20,-30,]),'DIVIDIDO':([7,12,13,14,15,16,17,33,34,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,],[21,-25,-26,-27,-28,-29,-31,21,-31,21,21,-34,-35,-36,21,21,21,21,21,21,21,-31,21,-30,]),'POR':([7,12,13,14,15,16,17,33,34,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,],[22,-25,-26,-27,-28,-29,-31,22,-31,22,22,-34,-35,-36,22,22,22,22,22,22,22,-31,22,-30,]),'MODULO':([7,12,13,14,15,16,17,33,34,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,],[23,-25,-26,-27,-28,-29,-31,23,-31,23,23,-34,-35,-36,23,23,23,23,23,23,23,-31,23,-30,]),'MAYQUE':([7,12,13,14,15,16,17,33,34,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,],[24,-25,-26,-27,-28,-29,-31,24,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,24,24,24,-31,24,-30,]),'MENIGUALQUE':([7,12,13,14,15,16,17,33,34,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,],[25,-25,-26,-27,-28,-29,-31,25,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,25,25,25,-31,25,-30,]),'MAYIGUALQUE':([7,12,13,14,15,16,17,33,34,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,],[26,-25,-26,-27,-28,-29,-31,26,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,26,26,26,-31,26,-30,]),'MENQUE':([7,12,13,14,15,16,17,33,34,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,],[27,-25,-26,-27,-28,-29,-31,27,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,27,27,27,-31,27,-30,]),'IGUALQUE':([7,12,13,14,15,16,17,33,34,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,],[28,-25,-26,-27,-28,-29,-31,28,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,28,-31,28,-30,]),'NIGUALQUE':([7,12,13,14,15,16,17,33,34,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,],[29,-25,-26,-27,-28,-29,-31,29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,29,-31,29,-30,]),'IGUAL':([8,17,48,],[30,-12,-11,]),'COMA':([8,12,13,14,15,16,17,34,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,65,],[31,-25,-26,-27,-28,-29,-12,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-11,57,-16,-17,-18,-30,57,-15,]),'PARDER':([12,13,14,15,16,33,34,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,65,],[-25,-26,-27,-28,-29,53,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,56,-16,-17,-18,-30,58,-15,]),'DOSP':([12,13,14,15,16,34,36,37,38,39,40,41,42,43,44,45,46,47,53,],[-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,55,-30,]),'BOOL':([55,],[61,]),'STRING':([55,],[63,]),'NONE':([55,],[64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'linstrucciones':([0,],[2,]),'instrucciones':([0,2,],[3,18,]),'asignacion':([0,2,],[4,4,]),'imprimir':([0,2,],[5,5,]),'imprimirln':([0,2,],[6,6,]),'exp':([0,2,10,19,20,21,22,23,24,25,26,27,28,29,30,32,35,57,],[7,7,33,36,37,38,39,40,41,42,43,44,45,46,47,52,52,52,]),'lista_ID':([0,2,],[8,8,]),'impresiones':([32,35,],[49,54,]),'prima_impresiones':([32,35,57,],[50,50,65,]),'tipo':([55,],[59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> linstrucciones','init',1,'p_init','gramatica.py',197),
  ('linstrucciones -> linstrucciones instrucciones','linstrucciones',2,'p_linstrucciones','gramatica.py',202),
  ('linstrucciones -> instrucciones','linstrucciones',1,'p_linstrucciones2','gramatica.py',207),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','gramatica.py',211),
  ('instrucciones -> imprimir','instrucciones',1,'p_instrucciones','gramatica.py',212),
  ('instrucciones -> imprimirln','instrucciones',1,'p_instrucciones','gramatica.py',213),
  ('instrucciones -> exp','instrucciones',1,'p_instrucciones','gramatica.py',214),
  ('funciones_nativas -> imprimir','funciones_nativas',1,'p_funcNativas','gramatica.py',220),
  ('asignacion -> lista_ID IGUAL exp','asignacion',3,'p_asignacion1','gramatica.py',226),
  ('asignacion -> lista_ID IGUAL exp DOSP tipo','asignacion',5,'p_asignacion2','gramatica.py',232),
  ('lista_ID -> lista_ID COMA ID','lista_ID',3,'p_listaParametros','gramatica.py',237),
  ('lista_ID -> ID','lista_ID',1,'p_listaParametros2','gramatica.py',242),
  ('imprimir -> PRINT PARIZQ impresiones PARDER','imprimir',4,'p_imprimir','gramatica.py',246),
  ('imprimirln -> PRINTLN PARIZQ impresiones PARDER','imprimirln',4,'p_imprimirln','gramatica.py',251),
  ('impresiones -> impresiones COMA prima_impresiones','impresiones',3,'p_impresiones','gramatica.py',256),
  ('impresiones -> prima_impresiones','impresiones',1,'p_impresiones2','gramatica.py',261),
  ('prima_impresiones -> ID','prima_impresiones',1,'p_primaImpresiones','gramatica.py',265),
  ('prima_impresiones -> exp','prima_impresiones',1,'p_primaImpresiones','gramatica.py',266),
  ('tipo -> INT','tipo',1,'p_tipo','gramatica.py',272),
  ('tipo -> BOOL','tipo',1,'p_tipo','gramatica.py',273),
  ('tipo -> FLOAT','tipo',1,'p_tipo','gramatica.py',274),
  ('tipo -> STRING','tipo',1,'p_tipo','gramatica.py',275),
  ('tipo -> NONE','tipo',1,'p_tipo','gramatica.py',276),
  ('tipo -> <empty>','tipo',0,'p_tipo','gramatica.py',277),
  ('exp -> INT','exp',1,'p_exp','gramatica.py',292),
  ('exp -> FLOAT','exp',1,'p_exp2','gramatica.py',298),
  ('exp -> TRUE','exp',1,'p_expTrue','gramatica.py',304),
  ('exp -> FALSE','exp',1,'p_expFalse','gramatica.py',308),
  ('exp -> cadenaString','exp',1,'p_exp7','gramatica.py',317),
  ('exp -> PARIZQ exp PARDER','exp',3,'p_exp8','gramatica.py',322),
  ('exp -> ID','exp',1,'p_exp9','gramatica.py',326),
  ('exp -> exp MAS exp','exp',3,'p_exp10','gramatica.py',331),
  ('exp -> exp MENOS exp','exp',3,'p_exp10','gramatica.py',332),
  ('exp -> exp DIVIDIDO exp','exp',3,'p_exp10','gramatica.py',333),
  ('exp -> exp POR exp','exp',3,'p_exp10','gramatica.py',334),
  ('exp -> exp MODULO exp','exp',3,'p_exp10','gramatica.py',335),
  ('exp -> exp MAYQUE exp','exp',3,'p_relacionales3','gramatica.py',358),
  ('exp -> exp MENIGUALQUE exp','exp',3,'p_relacionales3','gramatica.py',359),
  ('exp -> exp MAYIGUALQUE exp','exp',3,'p_relacionales3','gramatica.py',360),
  ('exp -> exp MENQUE exp','exp',3,'p_relacionales3','gramatica.py',361),
  ('exp -> exp IGUALQUE exp','exp',3,'p_relacionales3','gramatica.py',362),
  ('exp -> exp NIGUALQUE exp','exp',3,'p_relacionales3','gramatica.py',363),
]
